commit f113ce03deb69286ded39107a6e6753716a33509
Author: Izaak van Dongen <izaak.van.dongen@gmail.com>
Date:   Fri Mar 9 11:16:28 2018 +0000

    changed source tracker and added a few sources

diff --git a/dissertation/dissertation.tex b/dissertation/dissertation.tex
index 07d55f3..ae157c6 100644
--- a/dissertation/dissertation.tex
+++ b/dissertation/dissertation.tex
@@ -15,7 +15,7 @@
 \usepackage[utf8]{inputenc}
 \usepackage[T1]{fontenc}
 
-\usepackage{natbib}
+\usepackage[square]{natbib}
 
 \usepackage{graphicx}
 

commit ade807d44e84c03e6f77ddf5fed2008fdff396ed
Author: Izaak van Dongen <izaak.van.dongen@gmail.com>
Date:   Thu Mar 8 13:38:58 2018 +0000

    added more sources, hadamard program and harvard citations

diff --git a/dissertation/dissertation.tex b/dissertation/dissertation.tex
index af041e2..07d55f3 100644
--- a/dissertation/dissertation.tex
+++ b/dissertation/dissertation.tex
@@ -2,17 +2,21 @@
 \title{The application of noisy-channel coding techniques to DNA barcoding (Early structure/ideas)}
 \author{Izaak van Dongen}
 
-\usepackage{savetrees}
+\usepackage{fullpage}
 
 \usepackage{amsmath}
 \usepackage{amsfonts}
 \usepackage{commath}
 
+\usepackage[nottoc]{tocbibind}
+
 \usepackage[parfill]{parskip}
 
 \usepackage[utf8]{inputenc}
 \usepackage[T1]{fontenc}
 
+\usepackage{natbib}
+
 \usepackage{graphicx}
 
 \graphicspath{ {images/} }
@@ -24,6 +28,7 @@
 \definecolor{codegray}{rgb}{0.5,0.5,0.5}
 \definecolor{codepurple}{rgb}{0.58,0,0.82}
 \definecolor{backcolour}{rgb}{0.95,0.95,0.92}
+
 \lstdefinestyle{mystyle}{
     backgroundcolor=\color{backcolour},
     commentstyle=\color{codegreen},
@@ -32,6 +37,7 @@
     stringstyle=\color{codepurple},
     basicstyle=\footnotesize,
     breaklines=true,
+    postbreak=\mbox{\textcolor{red}{$\hookrightarrow$}\space},
     captionpos=b,
     keepspaces=true,
     numbers=left,
@@ -98,70 +104,17 @@
 
     The script implementing a simple binary Hamming code is as follows:
 
-\begin{lstlisting}[language=Python, caption=Binary Hamming code in Python]
-#!/usr/bin/env python3
-
-"""
-Hamming encoding framework for binary objects, using even parity.
-"""
-
-from itertools import count, takewhile
-
-def powers_to(n):
-    return takewhile(lambda x: x < n, (1 << i for i in count()))
-
-def hamming_encode(bin_stream):
-    pwr = 1
-    out = []
-
-    for bit in bin_stream:
-        while len(out) + 1 == pwr:
-            pwr <<= 1
-            out.append(0)
-        out.append(bit)
-
-    for i in powers_to(len(out)):
-        out[i - 1] = 1 & sum(out[pbit] for pstart in range(i - 1, len(out), i << 1)
-                                       for pbit in range(pstart, pstart + i))
-    return out
-\end{lstlisting}
+\lstinputlisting[language=Python, caption=Binary Hamming code in Python]{../src/binary_hamming.py}
 
     This code is accompanied by the following testing scheme:
 
-\begin{lstlisting}[language=Python, caption=binary\_hamming unit tests]
-"""
-Unit tests for binary_hamming.py
-"""
-
-import unittest
-
-from binary_hamming import powers_to, hamming_encode
-
-class BinaryHammingTestCase(unittest.TestCase):
-    def test_powers_to(self):
-        self.assertEqual(list(powers_to(0)), [])
-        self.assertEqual(list(powers_to(1)), [])
-        self.assertEqual(list(powers_to(2)), [1])
-        self.assertEqual(list(powers_to(4)), [1, 2])
-        self.assertEqual(list(powers_to(5)), [1, 2, 4])
-        self.assertEqual(list(powers_to(13)), [1, 2, 4, 8])
-
-    def test_hamming_encode(self):
-        self.assertEqual(hamming_encode([1, 0, 1, 1]), [0, 1, 1, 0, 0, 1, 1])
-
-if __name__ == "__main__":
-    unittest.main()
-\end{lstlisting}
+\lstinputlisting[language=Python, caption=binary\_hamming unit tests]{../src/test_binary_hamming.py}
 
     \section{Source}
 
-\nocite{CodeIntro}
-\nocite{Hamming}
-\nocite{HammingBarcodes}
-\nocite{Shannon}
-\nocite{PolynomialCodes}
-\nocite{Hadamard}
-\bibliography{sources}{}
-\bibliographystyle{unsrt}
+\nocite{*}
+
+\bibliographystyle{agsm}
+\bibliography{sources}
 
 \end{document}

commit 769ffceb592e710a8d51b0b079416e8fb22a8a2d
Author: Izaak van Dongen <izaak.van.dongen@gmail.com>
Date:   Thu Mar 1 15:09:45 2018 +0000

    added some more sources and expanded dissertation

diff --git a/dissertation/dissertation.tex b/dissertation/dissertation.tex
index 7df5c63..af041e2 100644
--- a/dissertation/dissertation.tex
+++ b/dissertation/dissertation.tex
@@ -159,6 +159,8 @@ if __name__ == "__main__":
 \nocite{Hamming}
 \nocite{HammingBarcodes}
 \nocite{Shannon}
+\nocite{PolynomialCodes}
+\nocite{Hadamard}
 \bibliography{sources}{}
 \bibliographystyle{unsrt}
 

commit 817eb93aaabb07be3d0ae02e0a9706cdba3ced97
Author: Izaak van Dongen <izaak.van.dongen@gmail.com>
Date:   Thu Feb 1 15:57:13 2018 +0000

    added code to dissertation

diff --git a/dissertation/dissertation.tex b/dissertation/dissertation.tex
index 3f0f6c9..7df5c63 100644
--- a/dissertation/dissertation.tex
+++ b/dissertation/dissertation.tex
@@ -29,7 +29,7 @@
     commentstyle=\color{codegreen},
     keywordstyle=\color{magenta},
     numberstyle=\tiny\color{codegray},
-    stringstyle=\color{codepturple},
+    stringstyle=\color{codepurple},
     basicstyle=\footnotesize,
     breaklines=true,
     captionpos=b,
@@ -51,6 +51,7 @@
 \begin{document}
     \maketitle
     \tableofcontents
+    \lstlistoflistings
 
     \section{Introduction}
     The premise of this project is to investigate the different types of
@@ -93,10 +94,65 @@
 
     \section{The Hamming distance}
 
-    
-
     \section{Implementing the Hamming code}
 
+    The script implementing a simple binary Hamming code is as follows:
+
+\begin{lstlisting}[language=Python, caption=Binary Hamming code in Python]
+#!/usr/bin/env python3
+
+"""
+Hamming encoding framework for binary objects, using even parity.
+"""
+
+from itertools import count, takewhile
+
+def powers_to(n):
+    return takewhile(lambda x: x < n, (1 << i for i in count()))
+
+def hamming_encode(bin_stream):
+    pwr = 1
+    out = []
+
+    for bit in bin_stream:
+        while len(out) + 1 == pwr:
+            pwr <<= 1
+            out.append(0)
+        out.append(bit)
+
+    for i in powers_to(len(out)):
+        out[i - 1] = 1 & sum(out[pbit] for pstart in range(i - 1, len(out), i << 1)
+                                       for pbit in range(pstart, pstart + i))
+    return out
+\end{lstlisting}
+
+    This code is accompanied by the following testing scheme:
+
+\begin{lstlisting}[language=Python, caption=binary\_hamming unit tests]
+"""
+Unit tests for binary_hamming.py
+"""
+
+import unittest
+
+from binary_hamming import powers_to, hamming_encode
+
+class BinaryHammingTestCase(unittest.TestCase):
+    def test_powers_to(self):
+        self.assertEqual(list(powers_to(0)), [])
+        self.assertEqual(list(powers_to(1)), [])
+        self.assertEqual(list(powers_to(2)), [1])
+        self.assertEqual(list(powers_to(4)), [1, 2])
+        self.assertEqual(list(powers_to(5)), [1, 2, 4])
+        self.assertEqual(list(powers_to(13)), [1, 2, 4, 8])
+
+    def test_hamming_encode(self):
+        self.assertEqual(hamming_encode([1, 0, 1, 1]), [0, 1, 1, 0, 0, 1, 1])
+
+if __name__ == "__main__":
+    unittest.main()
+\end{lstlisting}
+
     \section{Source}
 
 \nocite{CodeIntro}

commit 06904c5ea7f2f54e2a329169e02ddf6b89d56a2d
Author: Izaak van Dongen <izaak.van.dongen@gmail.com>
Date:   Thu Feb 1 15:33:43 2018 +0000

    added sources to .bib file and changed name to 'sources'

diff --git a/dissertation/dissertation.tex b/dissertation/dissertation.tex
index 8cbd1f2..3f0f6c9 100644
--- a/dissertation/dissertation.tex
+++ b/dissertation/dissertation.tex
@@ -1,5 +1,5 @@
-\documentclass[12pt]{article}
-\title{The application of noisy-channel coding techniques to DNA barcoding}
+\documentclass{article}
+\title{The application of noisy-channel coding techniques to DNA barcoding (Early structure/ideas)}
 \author{Izaak van Dongen}
 
 \usepackage{savetrees}
@@ -91,8 +91,19 @@
     
     All of these will be further explored in this dissertation.
 
+    \section{The Hamming distance}
+
+    
+
     \section{Implementing the Hamming code}
 
     \section{Source}
 
+\nocite{CodeIntro}
+\nocite{Hamming}
+\nocite{HammingBarcodes}
+\nocite{Shannon}
+\bibliography{sources}{}
+\bibliographystyle{unsrt}
+
 \end{document}

commit 30d9756e6eebe31c6d9c00b4b38cea5975bf4bfa
Author: Izaak van Dongen <izaak.van.dongen@gmail.com>
Date:   Thu Jan 25 14:41:58 2018 +0000

    developed makefile workflow w/ dissertation

diff --git a/dissertation/dissertation.tex b/dissertation/dissertation.tex
index d5ba20c..8cbd1f2 100644
--- a/dissertation/dissertation.tex
+++ b/dissertation/dissertation.tex
@@ -1,8 +1,98 @@
-\documentclass{article}
+\documentclass[12pt]{article}
 \title{The application of noisy-channel coding techniques to DNA barcoding}
 \author{Izaak van Dongen}
+
+\usepackage{savetrees}
+
 \usepackage{amsmath}
 \usepackage{amsfonts}
+\usepackage{commath}
+
+\usepackage[parfill]{parskip}
+
+\usepackage[utf8]{inputenc}
+\usepackage[T1]{fontenc}
+
+\usepackage{graphicx}
+
+\graphicspath{ {images/} }
+
+\usepackage{listings}
+\usepackage{color}
+
+\definecolor{codegreen}{rgb}{ 0,0.6,0}
+\definecolor{codegray}{rgb}{0.5,0.5,0.5}
+\definecolor{codepurple}{rgb}{0.58,0,0.82}
+\definecolor{backcolour}{rgb}{0.95,0.95,0.92}
+\lstdefinestyle{mystyle}{
+    backgroundcolor=\color{backcolour},
+    commentstyle=\color{codegreen},
+    keywordstyle=\color{magenta},
+    numberstyle=\tiny\color{codegray},
+    stringstyle=\color{codepturple},
+    basicstyle=\footnotesize,
+    breaklines=true,
+    captionpos=b,
+    keepspaces=true,
+    numbers=left,
+    numbersep=5pt,
+    showspaces=false,
+    showstringspaces=false,
+    showtabs=false,
+    tabsize=2
+}
+
+\lstset{style=mystyle}
+
+\lstset{
+    literate={~} {$\sim$}{1}
+}
+
 \begin{document}
     \maketitle
+    \tableofcontents
+
+    \section{Introduction}
+    The premise of this project is to investigate the different types of
+    error-correcting codes, and how these might be applied to DNA barcoding.
+    The challenge in this comes from the fact that most error-correcting codes
+    are designed in base-2 (binary) whereas DNA strings are fundamentally
+    base-4 (quaternary). The applicability of this project is that in
+    oligonucleotide synthesis, some samples may need to be idnetified later on
+    using a subseciton of the sample (a barcode). These could just be linearly
+    assigned codes, but this would leave them very susceptable to mutation.
+
+    Here is an example: say that we're given a barcode of length four, to
+    encode two different samples. If we worked methodically up from the bottom
+    (using the ordering ACGT - orderings will be discussed further later on) we
+    might end up with the codes AAAA and AAAC. However, either string would
+    only require a single mutation (where we say a mutation is the changing of
+    a single base) to become identical to the other one. Therefore, in this
+    case, it would clearly be far more optimal to make a choice like, for
+    example, AAAA and CCCC.
+
+    There have been a few assumptions and glossed over definitions here:
+
+    \begin{itemize}
+        \item What constitutes a mutation?
+        \item What is the best way to represent DNA mathematically?
+    \end{itemize}
+
+    There are also a number of parameters to the problem, and as they change
+    the problem becomes very much nontrivial:
+
+    \begin{itemize}
+    \item What if the barcode size changes?
+    \item What if we want more codes than two?
+    \item What if rather than number of codes and barcode size, the parameters
+          are set to barcode size and maximum number of mutations that can
+          occur?
+    \end{itemize}
+    
+    All of these will be further explored in this dissertation.
+
+    \section{Implementing the Hamming code}
+
+    \section{Source}
+
 \end{document}

commit 41603dcb4c5ff225585df39d0e210ff034b92cf7
Author: Izaak van Dongen <izaak.van.dongen@gmail.com>
Date:   Thu Nov 2 15:59:56 2017 +0000

    first commit

diff --git a/dissertation/dissertation.tex b/dissertation/dissertation.tex
new file mode 100644
index 0000000..d5ba20c
--- /dev/null
+++ b/dissertation/dissertation.tex
@@ -0,0 +1,8 @@
+\documentclass{article}
+\title{The application of noisy-channel coding techniques to DNA barcoding}
+\author{Izaak van Dongen}
+\usepackage{amsmath}
+\usepackage{amsfonts}
+\begin{document}
+    \maketitle
+\end{document}
